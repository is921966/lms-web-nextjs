import { render, screen } from '@testing-library/react'
import { PostCard } from './PostCard'

describe('PostCard', () => {
  const mockPost = {
    id: '1',
    title: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç',
    content: '<p>–≠—Ç–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–∞</p>',
    author: {
      full_name: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
      avatar_url: 'https://example.com/avatar.jpg'
    },
    channel: {
      name: '–ù–æ–≤–æ—Å—Ç–∏',
      color: '#3B82F6'
    },
    published_at: new Date().toISOString(),
    likes_count: 10,
    comments_count: 5,
    media_urls: [],
    is_liked: false,
    is_bookmarked: false
  }

  it('renders post information', () => {
    render(<PostCard post={mockPost} />)
    
    expect(screen.getByText('–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç')).toBeInTheDocument()
    expect(screen.getByText('–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤')).toBeInTheDocument()
    expect(screen.getByText('–ù–æ–≤–æ—Å—Ç–∏')).toBeInTheDocument()
  })

  it('displays reaction counts', () => {
    render(<PostCard post={mockPost} />)
    
    // –í Telegram —Å—Ç–∏–ª–µ —ç–º–æ–¥–∑–∏ –∏ —á–∏—Å–ª–∞ –≤ –æ–¥–Ω–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ
    expect(screen.getByText('‚ù§Ô∏è 10')).toBeInTheDocument()
    expect(screen.getByText('üí¨ 5')).toBeInTheDocument()
  })

  it('shows media when provided', () => {
    const postWithMedia = {
      ...mockPost,
      media_urls: ['https://example.com/image1.jpg', 'https://example.com/image2.jpg']
    }
    
    render(<PostCard post={postWithMedia} />)
    
    const images = screen.getAllByAltText('')
    expect(images).toHaveLength(2) // –¢–æ–ª—å–∫–æ –º–µ–¥–∏–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  })
}) 